var documenterSearchIndex = {"docs":
[{"location":"#Judi.jl","page":"Judi.jl","title":"Judi.jl","text":"","category":"section"},{"location":"","page":"Judi.jl","title":"Judi.jl","text":"Documentation for Judi.jl","category":"page"},{"location":"","page":"Judi.jl","title":"Judi.jl","text":"@matrix(ids...)\n@vector(ids...)\n@scalar(ids...)\nderivative(expr, wrt::Judi.Tensor)\ngradient(expr, wrt::Judi.Tensor)\njacobian(expr, wrt::Judi.Tensor)\nhessian(expr, wrt::Judi.Tensor)\nto_std_string(expr)","category":"page"},{"location":"#Judi.@matrix-Tuple","page":"Judi.jl","title":"Judi.@matrix","text":"@matrix(ids...)\n\nCreate one or more matrices. Example:\n\n@matrix A X\n\n\n\n\n\n","category":"macro"},{"location":"#Judi.@vector-Tuple","page":"Judi.jl","title":"Judi.@vector","text":"@vector(ids...)\n\nCreate one or more vectors. Example:\n\n@vector x y\n\n\n\n\n\n","category":"macro"},{"location":"#Judi.@scalar-Tuple","page":"Judi.jl","title":"Judi.@scalar","text":"@scalar(ids...)\n\nCreate one or more scalars. Example:\n\n@scalar a β\n\n\n\n\n\n","category":"macro"},{"location":"#Judi.derivative-Tuple{Any, Judi.Tensor}","page":"Judi.jl","title":"Judi.derivative","text":"derivative(expr, wrt::Tensor)\n\nCompute the derivative of expr with respect to wrt. Example:\n\n@matrix A\n@vector x\n\ngradient(x' * x, x)\n\n# output\n\n2x⁴\n\n\n\n\n\n","category":"method"},{"location":"#Judi.gradient-Tuple{Any, Judi.Tensor}","page":"Judi.jl","title":"Judi.gradient","text":"gradient(expr, wrt::Tensor)\n\nCompute the gradient of expr with respect to wrt. expr must be a scalar and wrt a vector. Example:\n\n@matrix A\n@vector x\n\ngradient(x' * A * x, x)\n\n# output\n\nx₃A³⁵ + A⁵₄x⁴\n\n\n\n\n\n","category":"method"},{"location":"#Judi.jacobian-Tuple{Any, Judi.Tensor}","page":"Judi.jl","title":"Judi.jacobian","text":"jacobian(expr, wrt::Tensor)\n\nCompute the jacobian of expr with respect to wrt. expr must be a column vector and wrt a vector. Example:\n\n@matrix A\n@vector x\n\njacobian(A * x, x)\n\n# output\n\nA³₅\n\n\n\n\n\n","category":"method"},{"location":"#Judi.hessian-Tuple{Any, Judi.Tensor}","page":"Judi.jl","title":"Judi.hessian","text":"hessian(expr, wrt::Tensor)\n\nCompute the hessian of expr with respect to wrt. expr must be a scalar and wrt a vector. Example:\n\n@matrix A\n@vector x\n\nhessian(x' * A * x, x)\n\n# output\n\nA₆⁵ + A⁵₆\n\n\n\n\n\n","category":"method"},{"location":"#Judi.to_std_string-Tuple{Any}","page":"Judi.jl","title":"Judi.to_std_string","text":"to_std_string(expr)\n\nConvert the expression expr to standard matrix notation. expr must be a scalar and wrt a vector. Example:\n\n@matrix A\n@vector x\n\nto_std_string(gradient(x' * A * x, x))\n\n# output\n\n\"Aᵀx + Ax\"\n\n\n\n\n\n","category":"method"}]
}
